on: [push, pull_request]
name: CI

env:
  BUILD_TYPE: Debug

jobs:
  build:
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      fail-fast: false
      matrix:
        compiler: [g++]
        os: [ubuntu-latest, macos-latest, windows-latest]
        experimental: [false]
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        shell: bash
        run: |
          echo "Running install dependences for $RUNNER_OS"
          if [ "$RUNNER_OS" == "Linux" ]; then
            echo "installing linux packages"
          elif [ "$RUNNER_OS" == "Windows" ]; then
            echo "installing windows packages"
          elif [ "$RUNNER_OS" == "MacOS" ]; then
            echo "installing macos packages"
          fi
          echo "installing pip packages"
          python3 -m pip install --user --upgrade pip
          python3 -m pip install --user --upgrade setuptools
          python3 -m pip install --user wheel twine
      - name: Build
        shell: bash
        run: |
          mkdir -p build
          cd build
          cmake .. \
            -DFOO=1 \
            -DBAR=2 \
            -DBAZ=3
          cmake --build .
          cd -
      - name: Test
        id: test
        shell: bash
        run: |
          ls ./build/*
          if [ "$RUNNER_OS" == "Windows" ]; then
            ./build/Debug/main.exe
          else
            ./build/main
          fi
          echo "::set-output name=result::$(python3 -c 'print(\'SUCCESS!\')')\n"
      - name: Validate Test Results
        run: echo ${{ steps.test.outputs.result }}

# ####################################################
# # BEGIN V0
# ####################################################
# jobs:
#   # ---------------------------------------------
#   # Ubuntu Build/Test
#   # ---------------------------------------------
#   ubuntu-build:
#     runs-on: ubuntu-latest
#     name: Ubuntu $BUILD_TYPE build
#     strategy:
#       matrix:
#         compiler: [g++]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Install Packages
#         run: |
#           sudo apt-get update
#       - name: Build
#         run: |
#           mkdir -p build
#           g++ src/main.cpp -o build/main
#       - name: Test
#         run: ./build/main
#   # ---------------------------------------------
#   # MacOS Build/Test
#   # ---------------------------------------------
#   macos-build:
#     runs-on: macos-latest
#     name: MacOS $BUILD_TYPE build
#     strategy:
#       matrix:
#         compiler: [g++]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Build
#         run: |
#           mkdir -p build
#           g++ src/main.cpp -o build/main
#       - name: Test
#         run: ./build/main
#   # ---------------------------------------------
#   # Windows Build/Test
#   # ---------------------------------------------
#   windows-build:
#     runs-on: windows-latest
#     name: Windows $BUILD_TYPE build
#     strategy:
#       matrix:
#         compiler: [g++]
#     steps:
#       - uses: actions/checkout@v2
#       - name: Build
#         run: |
#           mkdir -p build
#           g++ src/main.cpp -o build/main
#       - name: Test
#         run: ./build/main
# #####################################################
# # END V0
# #####################################################
